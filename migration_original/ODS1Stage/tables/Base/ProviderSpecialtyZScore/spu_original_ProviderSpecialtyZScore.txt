IF OBJECT_ID(N'tempdb..#ProviderZScore') IS NOT NULL DROP TABLE #ProviderZScore
	SELECT DISTINCT TOP 0
			ProviderID
	INTO    #ProviderZScore
	FROM    .Show.SOLRProviderDelta
	
	CREATE CLUSTERED INDEX CIX_tmpProviderFromspuSOLRProviderGenerateFromMid_XMLLoad ON #ProviderZScore(ProviderId)
	
	INSERT INTO #ProviderZScore
	SELECT	DISTINCT ProviderID
	FROM	SnowFlake.ETL.ProviderDeltaProcessing
	
	IF OBJECT_ID ('tempdb..#ProviderZScoretoSpecialtyToEligbleDCP') IS NOT NULL DROP TABLE #ProviderZScoretoSpecialtyToEligbleDCP
	SELECT		PTS.ProviderID
				,PTS.SpecialtyID
				,MT.MedicalTermID
				,SMT.DCPCode
	INTO		#ProviderZScoretoSpecialtyToEligbleDCP 
	FROM		#ProviderZScore P
	INNER JOIN	Base.ProviderToSpecialty PtS
				ON PtS.ProviderID = P.ProviderID
	INNER JOIN	Base.Specialty S 
				ON S.SpecialtyID = PtS.SpecialtyID
	INNER JOIN	
				(
					SELECT a.SpecialtyID, c.RefMedicalTermCode AS DCPCode
					FROM
					(
						--REPLACEMENT FOR DataScience.dbo.SpecialtyToMedicalTerm
						SELECT a.SpecialtyID, a.ConditionID AS MedicalTermID, a.TreatmentLevelID
						FROM ODS1Stage.Base.SpecialtyToCondition a
						JOIN ODS1Stage.Base.TreatmentLevel b ON b.TreatmentLevelID = a.TreatmentLevelID
						WHERE b.IsMarketView = 1
						UNION
						SELECT  a.SpecialtyID, a.ProcedureMedicalID AS MedicalTermID, a.TreatmentLevelID
						FROM ODS1Stage.Base.SpecialtyToProcedureMedical a
						JOIN ODS1Stage.Base.TreatmentLevel b ON b.TreatmentLevelID = a.TreatmentLevelID
						WHERE b.IsMarketView = 1
					)a
					JOIN ODS1Stage.Base.MedicalTerm c ON c.MedicalTermID = a.MedicalTermID
					JOIN ODS1Stage.Base.TreatmentLevel d ON d.TreatmentLevelID = a.TreatmentLevelID
					WHERE c.IsClaimsBased = 1				
				)smt 
				ON smt.SpecialtyID = pts.SpecialtyID
	INNER JOIN	Base.MedicalTerm mt 
				ON mt.RefMedicalTermCode = smt.DCPCode 
	--LEFT JOIN	DataScience.dbo.testmedical_to_specialty tmts 
	--			ON tmts.DCP_Code = smt.DCPCode
	WHERE		ISNULL(mt.IsScreening,0) = 0 --exclude screenings (Use new flag from MedicalTerm)

	IF OBJECT_ID ('tempdb..#ratinglist') IS NOT NULL DROP TABLE #ratinglist
	CREATE TABLE #ratinglist (DCPcode NVARCHAR(10),RatingCode NVARCHAR(10),ProcedureID NVARCHAR(3))
	INSERT INTO #ratinglist
	SELECT		DISTINCT
				b.refMedicalTermCode AS DCPcode
				,ISNULL(ISNULL(c.CohortCode,d.CohortCode),'N/A') RatingCode
				,ISNULL(e.ProcedureID,f.ProcedureID) ProcedureID
	FROM		Base.MedicalTerm b with(nolock) 
	LEFT JOIN	Base.CohortToCondition c with(nolock) on c.ConditionID=b.MedicalTermID
	LEFT JOIN	Base.CohortToProcedure d with(nolock) on d.ProcedureMedicalID=b.MedicalTermID
	LEFT JOIN	ERMart1.Facility.[Procedure] e with(nolock) on e.ProcedureID = c.CohortCode
	LEFT JOIN	ERMart1.Facility.[Procedure] f with(nolock) on f.ProcedureID = d.CohortCode
	WHERE		ISNULL(ISNULL(c.CohortCode,d.CohortCode),'N/A') != 'N/A'

	IF OBJECT_ID ('tempdb..#facaward') IS NOT NULL DROP TABLE #facaward
	CREATE TABLE #facaward (FacilityID UNIQUEIDENTIFIER,ProcedureID NVARCHAR(10),ProcedureDescription NVARCHAR(4000),ProcedureZScore FLOAT,OverallSurvivalStar INT)
	INSERT INTO #facaward
	SELECT		DISTINCT 
				sf.FacilityID
				,x.XmlCol.value('(pCd)[1]','VARCHAR(20)') AS ProcedureId --ProcedureCode
				,x.XmlCol.value('(pNm)[1]','VARCHAR(50)') AS ProcedureDescription --ProcedureName
				,x.XmlCol.value('(zScr)[1]','FLOAT') AS ProcedureZScore
				,x.XmlCol.value('(rStr)[1]','INT') AS OverallSurvivalStar
	FROM		Show.SOLRFacility sf
	CROSS APPLY	sf.ServiceLineXML.nodes('/svcLnL/svcLn') z(XmlCol)
	CROSS APPLY	z.XmlCol.nodes('procL/proc') x(XmlCol)
	WHERE		x.XmlCol.value('(pCd)[1]','VARCHAR(20)') in (select distinct ProcedureID from #ratinglist) --sf.FacilityID = '2902A4FC-F73B-E711-80E9-005056A6548D';

	IF OBJECT_ID ('tempdb..#DCPFacilities') IS NOT NULL DROP TABLE #DCPFacilities
	SELECT		DISTINCT 
				a.ProviderID 
				,a.FacilityID 
				,mt.RefMedicalTermCode AS DCPCode 
				,r.ProcedureID
				,r.RatingCode
				,fa.OverallSurvivalStar
				,fa.ProcedureZScore
				,a.PatientCount 
				,a.PatientCountIsFew
				,a.PatientCount * fa.ProcedureZScore AS WeightedZscore
	INTO		#DCPFacilities
	FROM		Base.ProviderToFacilityToMedicalTerm a 
	INNER JOIN	#ProviderZScore P ON P.ProviderID = A.ProviderID
	INNER JOIN	Base.MedicalTerm mt ON mt.MedicalTermID = a.MedicalTermID 
	INNER JOIN	#ratinglist r ON r.DCPcode = mt.RefMedicalTermCode
	INNER JOIN	#facaward fa ON fa.FacilityID = a.FacilityID AND fa.ProcedureID = r.ProcedureID
	WHERE		a.PatientCountIsFew = 0


	IF OBJECT_ID ('tempdb..#ProviderZScoreSpecialtyDCPRatings') IS NOT NULL DROP TABLE #ProviderZScoreSpecialtyDCPRatings
	SELECT		a.ProviderID
				,b.SpecialtyID
				,SUM(a.WeightedZscore) / SUM(a.PatientCount) AS AvgWeightedZscore
	INTO		#ProviderZScoreSpecialtyDCPRatings
	FROM		#DCPFacilities a 
	INNER JOIN	#ProviderZScoretoSpecialtyToEligbleDCP b ON b.ProviderID = a.ProviderID AND b.DCPCode = a.DCPCode
	WHERE		a.PatientCountIsFew = 0 
	GROUP BY	a.ProviderID
				,b.SpecialtyID
	
	DELETE		T
	FROM		Base.ProviderSpecialtyZScore T 
	INNER JOIN	#ProviderZScore P 
				ON P.ProviderID = T.ProviderID
	LEFT JOIN	#ProviderZScoreSpecialtyDCPRatings S
				ON S.ProviderID = T.ProviderID
				AND S.SpecialtyID = T.SpecialtyID
	WHERE		S.ProviderID IS NULL
	
	UPDATE		T
	SET			AvgWeightedZscore = S.AvgWeightedZscore
	FROM		Base.ProviderSpecialtyZScore T 
	INNER JOIN	#ProviderZScoreSpecialtyDCPRatings S
				ON S.ProviderID = T.ProviderID
				AND S.SpecialtyID = T.SpecialtyID
	WHERE		CAST(S.AvgWeightedZscore AS NUMERIC(10,5)) != T.AvgWeightedZscore
	
	INSERT INTO Base.ProviderSpecialtyZScore(ProviderID, SpecialtyID, AvgWeightedZscore)
	SELECT		S.ProviderID, S.SpecialtyID, S.AvgWeightedZscore
	FROM		#ProviderZScoreSpecialtyDCPRatings S
	LEFT JOIN	Base.ProviderSpecialtyZScore T 
				ON T.ProviderID = S.ProviderID
				AND T.SpecialtyID = S.SpecialtyID
	WHERE		T.ProviderSpecialtyZScoreID IS NULL

GO
